apiVersion: {{ template "deployment_api_version" . }}
kind: Deployment
metadata:
  labels:
    app: {{ template "app.name" . }}
    chart: {{ template "app.version" . }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
  name: {{ template "app.fullname" . }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ template "app.name" . }}
      chart: {{ template "app.version" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/dashboards-configmap.yaml") . | sha256sum }}
      labels:
        app: {{ template "app.name" . }}
        chart: {{ template "app.version" . }}
        release: {{ .Release.Name }}
    spec:
      containers:
      - name: grafana
        image: {{ template "system_default_registry" . }}{{ .Values.image.repository }}:{{ .Values.image.tag }}
        env:
        - name: GF_AUTH_BASIC_ENABLED
          value: "true"
        - name: GF_AUTH_ANONYMOUS_ENABLED
          value: "true"
{{- if .Values.extraVars }}
{{ toYaml .Values.extraVars | indent 8 }}
{{- end }}
        volumeMounts:
        - name: grafana-storage
          mountPath: /var/lib/grafana
        - name: grafana-dashboards
          mountPath: /var/lib/grafana/rancher-dashboards
        - name: grafana-istio-dashboards
          mountPath: /var/lib/grafana/rancher-istio-dashboards
        - name: grafana-provisionings
          mountPath: /etc/grafana/provisioning/dashboards/all.yaml
          subPath: dashboards.yaml
        - name: grafana-provisionings
          mountPath: /etc/grafana/provisioning/datasources/all.yaml
          subPath: datasources.yaml
        - name: grafana-provisionings
          mountPath: /etc/grafana/grafana.ini
          subPath: grafana.ini
{{- if eq .Values.global.clusterName "local" }}
        - name: grafana-rancher-dashboards
          mountPath: /var/lib/grafana/rancher-metrics-dashboards
{{- end }}
        ports:
        - name: web
          containerPort: 3000
          protocol: TCP
        {{- if .Values.livenessProbe }}
        livenessProbe:
{{ toYaml .Values.livenessProbe | indent 10 }}
        {{- end }}
        readinessProbe:
{{ merge .Values.readinessProbe .Values.defaultReadinessProbe | toYaml | indent 10 }}
        {{- if and .Values.resources .Values.resources.core }}
        resources:
{{ toYaml .Values.resources.core | indent 10 }}
        {{- end }}
      - name: grafana-proxy
        image: {{ template "system_default_registry" . }}{{ .Values.image.proxy.repository }}:{{ .Values.image.proxy.tag }}
        args:
        - nginx
        - -g
        - daemon off;
        - -c
        - /nginx/nginx.conf
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        volumeMounts:
        - mountPath: /nginx/
          name: grafana-nginx
        - mountPath: /var/cache/nginx
          name: nginx-home
        {{- if and .Values.resources .Values.resources.proxy }}
        resources:
{{ toYaml .Values.resources.proxy | indent 10 }}
        securityContext:
          runAsUser: 101
          runAsGroup: 101
        {{- end }}
      nodeSelector:
{{- include "linux-node-selector" . | nindent 8 }}
        {{- range .Values.nodeSelectors }}
        {{- $pair := regexSplit "=" . 2 }}
        {{- if eq 2 (len $pair) }}
        {{ (index $pair 0) }}: {{ (index $pair 1) }}
        {{- else }}
        {{ (index $pair 0) }}: ""
        {{- end }}
        {{- end }}
    {{- if .Values.enabledRBAC }}
      serviceAccountName: {{ default (default (include "app.fullname" .) .Values.serviceAccountName) .Values.serviceAccountNameOverride }}
    {{- end }}
      tolerations:
{{- include "linux-node-tolerations" . | nindent 8 }}
    {{- if .Values.tolerations }}
{{ toYaml .Values.tolerations | indent 8 }}
    {{- end }}
      securityContext:
        runAsUser: 472
        runAsGroup: 472
        fsGroup: 472
      volumes:
      - name: grafana-storage
        {{- if or .Values.storageSpec .Values.persistence.enabled }}
        persistentVolumeClaim:
          {{- if .Values.persistence.existingClaim }}
          claimName: {{ .Values.persistence.existingClaim }}
          {{- else }}
          claimName: {{ template "app.fullname" . }}
          {{- end }}
        {{- else }}
        emptyDir: {}
        {{- end }}
      - name: grafana-nginx
        configMap:
          name: {{ template "app.nginx.fullname" . }}
          items:
          - key: nginx.conf
            mode: 438
            path: nginx.conf
      - name: grafana-dashboards
        configMap:
          name: {{ template "app.dashboards.fullname" . }}
      - name: grafana-istio-dashboards
        configMap:
          name: {{ template "app.dashboards.istio-fullname" . }}
      - name: grafana-provisionings
        configMap:
          name: {{ template "app.provisionings.fullname" . }}
      - name: nginx-home
        emptyDir: {}
{{- if eq .Values.global.clusterName "local" }}
      - name: grafana-rancher-dashboards
        configMap:
          name: {{ template "app.dashboards.rancher-fullname" . }}
{{- end }}
