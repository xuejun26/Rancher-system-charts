apiVersion: apps/v1
kind: Deployment
metadata:
  name: thanos-{{ .Release.Name }}
  labels:
    app: {{ template "app.fullname" . }}
    chart: {{ .Chart.Name }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
    component: query
spec:
  replicas: {{ .Values.thanos.query.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "app.fullname" . }}
      chart: {{ .Chart.Name }}
      release: {{ .Release.Name }}
      component: query
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/proxy-configmap.yaml") . | sha256sum }}
      labels:
        app: {{ template "app.fullname" . }}
        chart: {{ .Chart.Name }}
        release: {{ .Release.Name }}
        component: query
    spec:
      containers:
        - name: thanos
          image: "{{ template "system_default_registry" . }}{{ .Values.thanos.image.repository }}:{{ .Values.thanos.image.tag }}"
          imagePullPolicy: {{ .Values.thanos.image.pullPolicy }}
          args:
          - query
          - --web.external-prefix={{ .Values.thanos.query.externalPrefix }}
          - --store.sd-files=/etc/thanos/thanos-store.yml
          - --store.sd-interval={{ .Values.thanos.query.storeInterval }}
        {{- range .Values.thanos.query.extraArgs }}
          {{- $pair := regexSplit "=" . 2 }}
          {{- if eq 2 (len $pair) }}
          - {{ (index $pair 0) }}
          - {{ (index $pair 1) }}
          {{- else }}
          - {{ (index $pair 0) }}
          {{- end }}
        {{- end }}
          ports:
            - name: http
              containerPort: 10902
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.thanos.query.resources | nindent 12 }}
          volumeMounts:
          - mountPath: /etc/thanos
            name: thanos-store  
        - name: nginx
          image: "{{ template "system_default_registry" . }}{{ .Values.thanos.image.proxy.repository }}:{{ .Values.thanos.image.proxy.tag }}"
          imagePullPolicy: {{ .Values.thanos.image.pullPolicy }}
          resources:
            {{- toYaml .Values.thanos.query.proxy.resources | nindent 12 }}
          volumeMounts:
          - mountPath: /etc/nginx/conf.d/default.conf
            name: nginx-config
            subPath: default.conf
          {{- if .Values.privateCa }}
          - mountPath: /etc/kubernetes/ssl/certs
            name: ca-cert
          {{- end }}
      nodeSelector:
      {{- include "linux-node-selector" . | nindent 8 }}
      {{- with .Values.thanos.query.nodeSelector }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.thanos.query.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      tolerations:
      {{- include "linux-node-tolerations" . | nindent 8 }}
      {{- with .Values.thanos.query.tolerations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
      - configMap:
          items:
          - key: default.conf
            path: default.conf
          name: proxy-{{ .Release.Name }}
        name: nginx-config
      - configMap:
          name: thanos-query-stores
        name: thanos-store
      {{- if .Values.privateCa }}
      - name: ca-cert
        hostPath:
          path: /etc/kubernetes/ssl/certs
      {{- end }}
